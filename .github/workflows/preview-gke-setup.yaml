name: Setup GKE preview

on:
  pull_request:
    types: [labeled, synchronize, opened, reopened]

env:
  CLUSTER_NAME: preview-pr-${{ github.event.pull_request.number }}
  CLOUDSDK_COMPUTE_ZONE: us-central1-a
  DNS_ZONE: ospk8s

jobs:
  setup:
    if: contains(github.event.pull_request.labels.*.name, 'preview-gke')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mask service account key
        run: |
          echo "::add-mask::${{ secrets.GCLOUD_SVC_ACCOUNT_KEY_JSON }}"

      - name: Auth with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_SVC_ACCOUNT_KEY_JSON }}
          project_id: ospk8s

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install kustomize
        run: |
          curl -OL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.3.0/kustomize_v4.3.0_linux_amd64.tar.gz
          tar xfv kustomize_v4.3.0_linux_amd64.tar.gz
          mv kustomize /usr/local/bin/kustomize

      - name: Update operator image
        working-directory: config/manager
        run: |
          kustomize edit set image ghcr.io/ianunruh/openstack-operator:sha-$GITHUB_SHA

      - name: Setup GKE cluster
        working-directory: ci/preview/gke
        run: ./setup.sh
        env:
          GCLOUD_SVC_ACCOUNT_KEY_JSON: ${{ secrets.GCLOUD_SVC_ACCOUNT_KEY_JSON }}

      - name: Post comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            GKE cluster in `${{ env.CLOUDSDK_COMPUTE_ZONE }}` ready for testing ðŸš€

            Last deployed commit: `${{ github.sha }}`

            Horizon: https://horizon.${{ env.CLUSTER_NAME }}.${{ env.CLOUDSDK_COMPUTE_ZONE }}.test.ospk8s.com

            ```bash
            gcloud config set compute/zone ${{ env.CLOUDSDK_COMPUTE_ZONE }}
            gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }}

            kubectl get secret keystone -o 'jsonpath={.data.OS_PASSWORD}' | base64 -d
            ```
